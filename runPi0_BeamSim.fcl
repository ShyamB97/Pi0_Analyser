#include "services_dune.fcl"
#include "pi0TestConfig.fcl"
#include "ProtoDUNETruthBeamFilter.fcl"

process_name: pi0BeamMC

pi0_test_selection:
{
   module_type:             "pi0TestSelection"
   CalorimetryTag:          "pandoracalo"
   TrackerTag:              "pandoraTrack"
   ShowerTag:               "pandoraShower"
   HitTag:                  "hitpdune"
   PFParticleTag:           "pandora"
   GeneratorTag:            "generator"
   CalorimetryTagSCE:       "pandoracalinoxyzt"

   SelectEvents: []

   BeamlineUtils:        @local::standard_protodunebeamlineutils
   Pi0Only: true
   RetrieveSpacePoints: false
   # Retrieve G4 determines what truth information should be accessed has 4 options:
   # 0 : None
   # 1 : PIO, only get truth information from pi0 decays and their daughters
   # 2 : DIPHOTON, get the first two MC particles (and their daughters maybe?), only use when analysing diphoton MC.
   # 3 : ALL, NOT RECOMMENDED as it retrieves all MC particles from the truth table, and resulting file sizes will be significantly larger.
   RetrieveG4: 1
   AnalyseFromBeam: true
   CalibrationParsSCE: @local::CalorimetryParameters_SPProd4_MC_SCE

   #CalibrationParsSCE: @local::CalorimetryParameters_SPProd2_MC_SCE
   #CalibrationParsSCE: @local::CalorimetryParameters_SPProd2_MC_35ms

}

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "pi0Test_output.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodune_services
  PdspChannelMapService:@local::pdspchannelmap
  ChannelStatusService: @local::pdsp_channel_status
  BackTrackerService: {
    BackTracker: {
      SimChannelModuleLabel: "tpcrawdecoder:simpleSC"
      G4ModuleLabel: "largeant"
      MinimumHitEnergyFraction: 1e-1
      HitTimeRMS: 5
    }
  }

}
services.message.destinations.LogStandardOut.threshold: "INFO"
services.SpaceCharge.EnableSimEfieldSCE: true
services.SpaceCharge.EnableSimSpatialSCE: true
services.SpaceCharge.EnableSimulationSCE: true

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["input_file.root"]
}

physics:
{

 filters: {
   fTruth: @local::beam_filter
 }

 fpath: [fTruth]

 analyzers:
 {
  pduneana:          @local::pi0_test_selection
 }

 pi0Ana: [pduneana]

 end_paths:     [ pi0Ana ]
}

outputs: {}
physics.filters.fTruth.PDG: [211, -13, 2212]
physics.analyzers.pduneana.SelectEvents: ["fpath"]
services.ParticleInventoryService.ParticleInventory.EveIdCalculator: "EmEveIdCalculator"